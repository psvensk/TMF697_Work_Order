{
    "swagger": "2.0",
    "info": {
        "title": "Work Order",
        "description": "**TMF API Reference : TMF 697 - Work Order Management**",
        "version": "4.0.0"
    },
    "host": "serverRoot",
    "basePath": "/tmf-api/workOrderManagement/v4/",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json;charset=utf-8"
    ],
    "produces": [
        "application/json;charset=utf-8"
    ],
    "tags": [
        {
            "name": "workOrder"
        },
        {
            "name": "cancelWorkOrder"
        },
        {
            "name": "notification listeners (client side)"
        },
        {
            "name": "events subscription"
        }
    ],
    "paths": {
        "/workOrder": {
            "get": {
                "operationId": "listWorkOrder",
                "summary": "List or find WorkOrder objects",
                "description": "This operation list or find WorkOrder entities",
                "tags": [
                    "workOrder"
                ],
                "parameters": [
                    {
                        "name": "fields",
                        "description": "Comma-separated properties to be provided in response",
                        "required": false,
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "description": "Requested index for start of resources to be provided in response",
                        "required": false,
                        "in": "query",
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "description": "Requested number of resources to be provided in response",
                        "required": false,
                        "in": "query",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "X-Result-Count": {
                                "description": "Actual number of items returned in the response body",
                                "type": "integer"
                            },
                            "X-Total-Count": {
                                "description": "Total number of items matching criteria",
                                "type": "integer"
                            }
                        },
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WorkOrder"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "operationId": "createWorkOrder",
                "summary": "Creates a WorkOrder",
                "description": "This operation creates a WorkOrder entity.",
                "tags": [
                    "workOrder"
                ],
                "parameters": [
                    {
                        "name": "workOrder",
                        "description": "The WorkOrder to be created",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WorkOrder_Create"
                        },
                        "in": "body"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/WorkOrder"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/workOrder/{id}": {
            "get": {
                "operationId": "retrieveWorkOrder",
                "summary": "Retrieves a WorkOrder by ID",
                "description": "This operation retrieves a WorkOrder entity. Attribute selection is enabled for all first level attributes.",
                "tags": [
                    "workOrder"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Identifier of the WorkOrder",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    },
                    {
                        "name": "fields",
                        "description": "Comma-separated properties to provide in response",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/WorkOrder"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "patch": {
                "operationId": "patchWorkOrder",
                "summary": "Updates partially a WorkOrder",
                "description": "This operation updates partially a WorkOrder entity.",
                "tags": [
                    "workOrder"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Identifier of the WorkOrder",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    },
                    {
                        "name": "workOrder",
                        "description": "The WorkOrder to be updated",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WorkOrder_Update"
                        },
                        "in": "body"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated",
                        "schema": {
                            "$ref": "#/definitions/WorkOrder"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "operationId": "deleteWorkOrder",
                "summary": "Deletes a WorkOrder",
                "description": "This operation deletes a WorkOrder entity.",
                "tags": [
                    "workOrder"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Identifier of the WorkOrder",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/cancelWorkOrder": {
            "get": {
                "operationId": "listCancelWorkOrder",
                "summary": "List or find CancelWorkOrder objects",
                "description": "This operation list or find CancelWorkOrder entities",
                "tags": [
                    "cancelWorkOrder"
                ],
                "parameters": [
                    {
                        "name": "fields",
                        "description": "Comma-separated properties to be provided in response",
                        "required": false,
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "description": "Requested index for start of resources to be provided in response",
                        "required": false,
                        "in": "query",
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "description": "Requested number of resources to be provided in response",
                        "required": false,
                        "in": "query",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "X-Result-Count": {
                                "description": "Actual number of items returned in the response body",
                                "type": "integer"
                            },
                            "X-Total-Count": {
                                "description": "Total number of items matching criteria",
                                "type": "integer"
                            }
                        },
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CancelWorkOrder"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "operationId": "createCancelWorkOrder",
                "summary": "Creates a CancelWorkOrder",
                "description": "This operation creates a CancelWorkOrder entity.",
                "tags": [
                    "cancelWorkOrder"
                ],
                "parameters": [
                    {
                        "name": "cancelWorkOrder",
                        "description": "The CancelWorkOrder to be created",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CancelWorkOrder_Create"
                        },
                        "in": "body"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/CancelWorkOrder"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/cancelWorkOrder/{id}": {
            "get": {
                "operationId": "retrieveCancelWorkOrder",
                "summary": "Retrieves a CancelWorkOrder by ID",
                "description": "This operation retrieves a CancelWorkOrder entity. Attribute selection is enabled for all first level attributes.",
                "tags": [
                    "cancelWorkOrder"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Identifier of the CancelWorkOrder",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    },
                    {
                        "name": "fields",
                        "description": "Comma-separated properties to provide in response",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CancelWorkOrder"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/hub": {
            "post": {
                "operationId": "registerListener",
                "summary": "Register a listener",
                "description": "Sets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.",
                "tags": [
                    "events subscription"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "schema": {
                            "$ref": "#/definitions/EventSubscriptionInput"
                        },
                        "required": true,
                        "in": "body",
                        "description": "Data containing the callback endpoint to deliver the information"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Subscribed",
                        "schema": {
                            "$ref": "#/definitions/EventSubscription"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/hub/{id}": {
            "delete": {
                "operationId": "unregisterListener",
                "summary": "Unregister a listener",
                "description": "Resets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.",
                "tags": [
                    "events subscription"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "description": "The id of the registered listener"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/listener/workOrderCreateEvent": {
            "post": {
                "operationId": "listenToWorkOrderCreateEvent",
                "summary": "Client listener for entity WorkOrderCreateEvent",
                "description": "Example of a client listener for receiving the notification WorkOrderCreateEvent",
                "tags": [
                    "notification listeners (client side)"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "required": true,
                        "in": "body",
                        "description": "The event data",
                        "schema": {
                            "$ref": "#/definitions/WorkOrderCreateEvent"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Notified",
                        "schema": {
                            "$ref": "#/definitions/EventSubscription"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/listener/workOrderAttributeValueChangeEvent": {
            "post": {
                "operationId": "listenToWorkOrderAttributeValueChangeEvent",
                "summary": "Client listener for entity WorkOrderAttributeValueChangeEvent",
                "description": "Example of a client listener for receiving the notification WorkOrderAttributeValueChangeEvent",
                "tags": [
                    "notification listeners (client side)"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "required": true,
                        "in": "body",
                        "description": "The event data",
                        "schema": {
                            "$ref": "#/definitions/WorkOrderAttributeValueChangeEvent"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Notified",
                        "schema": {
                            "$ref": "#/definitions/EventSubscription"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/listener/workOrderDeleteEvent": {
            "post": {
                "operationId": "listenToWorkOrderDeleteEvent",
                "summary": "Client listener for entity WorkOrderDeleteEvent",
                "description": "Example of a client listener for receiving the notification WorkOrderDeleteEvent",
                "tags": [
                    "notification listeners (client side)"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "required": true,
                        "in": "body",
                        "description": "The event data",
                        "schema": {
                            "$ref": "#/definitions/WorkOrderDeleteEvent"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Notified",
                        "schema": {
                            "$ref": "#/definitions/EventSubscription"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/listener/workOrderStateChangeEvent": {
            "post": {
                "operationId": "listenToWorkOrderStateChangeEvent",
                "summary": "Client listener for entity WorkOrderStateChangeEvent",
                "description": "Example of a client listener for receiving the notification WorkOrderStateChangeEvent",
                "tags": [
                    "notification listeners (client side)"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "required": true,
                        "in": "body",
                        "description": "The event data",
                        "schema": {
                            "$ref": "#/definitions/WorkOrderStateChangeEvent"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Notified",
                        "schema": {
                            "$ref": "#/definitions/EventSubscription"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/listener/workOrderInformationRequiredEvent": {
            "post": {
                "operationId": "listenToWorkOrderInformationRequiredEvent",
                "summary": "Client listener for entity WorkOrderInformationRequiredEvent",
                "description": "Example of a client listener for receiving the notification WorkOrderInformationRequiredEvent",
                "tags": [
                    "notification listeners (client side)"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "required": true,
                        "in": "body",
                        "description": "The event data",
                        "schema": {
                            "$ref": "#/definitions/WorkOrderInformationRequiredEvent"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Notified",
                        "schema": {
                            "$ref": "#/definitions/EventSubscription"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/listener/cancelWorkOrderCreateEvent": {
            "post": {
                "operationId": "listenToCancelWorkOrderCreateEvent",
                "summary": "Client listener for entity CancelWorkOrderCreateEvent",
                "description": "Example of a client listener for receiving the notification CancelWorkOrderCreateEvent",
                "tags": [
                    "notification listeners (client side)"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "required": true,
                        "in": "body",
                        "description": "The event data",
                        "schema": {
                            "$ref": "#/definitions/CancelWorkOrderCreateEvent"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Notified",
                        "schema": {
                            "$ref": "#/definitions/EventSubscription"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/listener/cancelWorkOrderStateChangeEvent": {
            "post": {
                "operationId": "listenToCancelWorkOrderStateChangeEvent",
                "summary": "Client listener for entity CancelWorkOrderStateChangeEvent",
                "description": "Example of a client listener for receiving the notification CancelWorkOrderStateChangeEvent",
                "tags": [
                    "notification listeners (client side)"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "required": true,
                        "in": "body",
                        "description": "The event data",
                        "schema": {
                            "$ref": "#/definitions/CancelWorkOrderStateChangeEvent"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Notified",
                        "schema": {
                            "$ref": "#/definitions/EventSubscription"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/listener/cancelWorkOrderInformationRequiredEvent": {
            "post": {
                "operationId": "listenToCancelWorkOrderInformationRequiredEvent",
                "summary": "Client listener for entity CancelWorkOrderInformationRequiredEvent",
                "description": "Example of a client listener for receiving the notification CancelWorkOrderInformationRequiredEvent",
                "tags": [
                    "notification listeners (client side)"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "required": true,
                        "in": "body",
                        "description": "The event data",
                        "schema": {
                            "$ref": "#/definitions/CancelWorkOrderInformationRequiredEvent"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Notified",
                        "schema": {
                            "$ref": "#/definitions/EventSubscription"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Addressable": {
            "type": "object",
            "description": "Base schema for adressable entities",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                }
            }
        },
        "AgreementRef": {
            "type": "object",
            "description": "Agreement reference. An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the agreement"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        },
        "Any": {},
        "AppointmentRef": {
            "type": "object",
            "description": "Refers an appointment, such as a Customer presentation or internal meeting or site visit",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The identifier of the referred appointment"
                },
                "href": {
                    "type": "string",
                    "description": "The reference of the appointment"
                },
                "description": {
                    "type": "string",
                    "description": "An explanatory text regarding the appointment made with a party"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation"
                }
            },
            "required": [
                "id"
            ]
        },
        "Attachment": {
            "type": "object",
            "description": "Complements the description of an element (for instance a product) through video, pictures...",
            "properties": {
                "id": {
                    "example": "4aafacbd-11ff-4dc8-b445-305f2215715f",
                    "type": "string",
                    "description": "Unique identifier for this particular attachment"
                },
                "href": {
                    "example": "http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f",
                    "type": "string",
                    "format": "uri",
                    "description": "URI for this Attachment"
                },
                "attachmentType": {
                    "example": "video",
                    "type": "string",
                    "description": "Attachment type such as video, picture"
                },
                "content": {
                    "type": "string",
                    "format": "base64",
                    "description": "The actual contents of the attachment object, if embedded, encoded as base64"
                },
                "description": {
                    "example": "Photograph of the Product",
                    "type": "string",
                    "description": "A narrative text describing the content of the attachment"
                },
                "mimeType": {
                    "type": "string",
                    "description": "Attachment mime type such as extension file for video, picture and document"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the attachment"
                },
                "url": {
                    "example": "http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f",
                    "type": "string",
                    "format": "uri",
                    "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                },
                "size": {
                    "$ref": "#/definitions/Quantity",
                    "description": "The size of the attachment."
                },
                "validFor": {
                    "$ref": "#/definitions/TimePeriod",
                    "description": "The period of time for which the attachment is valid"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "AttachmentRef": {
            "type": "object",
            "description": "Attachment reference. An attachment complements the description of an element (for instance a product) through video, pictures",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique-Identifier for this attachment"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "URL serving as reference for the attachment resource"
                },
                "description": {
                    "type": "string",
                    "description": "A narrative text describing the content of the attachment"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the related entity."
                },
                "url": {
                    "type": "string",
                    "format": "uri",
                    "description": "Link to the attachment media/content"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            },
            "required": [
                "id"
            ]
        },
        "AttachmentRefOrValue": {
            "type": "object",
            "description": "An attachment by value or by reference. An attachment complements the description of an element, for example through a document, a video, a picture.",
            "properties": {
                "id": {
                    "example": "4aafacbd-11ff-4dc8-b445-305f2215715f",
                    "type": "string",
                    "description": "Unique identifier for this particular attachment"
                },
                "href": {
                    "example": "http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f",
                    "type": "string",
                    "format": "uri",
                    "description": "URI for this Attachment"
                },
                "attachmentType": {
                    "example": "video",
                    "type": "string",
                    "description": "Attachment type such as video, picture"
                },
                "content": {
                    "type": "string",
                    "format": "base64",
                    "description": "The actual contents of the attachment object, if embedded, encoded as base64"
                },
                "description": {
                    "example": "Photograph of the Product",
                    "type": "string",
                    "description": "A narrative text describing the content of the attachment"
                },
                "mimeType": {
                    "type": "string",
                    "description": "Attachment mime type such as extension file for video, picture and document"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the attachment"
                },
                "url": {
                    "example": "http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f",
                    "type": "string",
                    "format": "uri",
                    "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                },
                "size": {
                    "$ref": "#/definitions/Quantity",
                    "description": "The size of the attachment."
                },
                "validFor": {
                    "$ref": "#/definitions/TimePeriod",
                    "description": "The period of time for which the attachment is valid"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        },
        "BillingAccountRef": {
            "type": "object",
            "description": "BillingAccount reference. A BillingAccount is a detailed description of a bill structure.",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the billing account"
                },
                "href": {
                    "type": "string",
                    "description": "Reference of the billing account"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the billing account"
                },
                "ratingType": {
                    "type": "string",
                    "description": "Indicates whether the account follows a specific payment option such as prepaid or postpaid"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        },
        "CancelOrder": {
            "type": "object",
            "description": "A Order cancel is a type of task which  can  be used to place a request to cancel an order",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "id of the cancellation request (this is not an order id)"
                },
                "href": {
                    "type": "string",
                    "description": "Hyperlink to access the cancellation request"
                },
                "cancellationReason": {
                    "type": "string",
                    "description": "Reason why the order is cancelled."
                },
                "effectiveCancellationDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the order is cancelled."
                },
                "requestedCancellationDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the submitter wants the order to be cancelled"
                },
                "state": {
                    "$ref": "#/definitions/TaskStateType",
                    "description": "Tracks the lifecycle status of the cancellation request, such as Acknowledged, Rejected, InProgress, Pending and so on."
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "CancelWorkOrder": {
            "type": "object",
            "required": [
                "workOrder"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "cancellationReason": {
                    "type": "string",
                    "description": "Reason why the order is cancelled."
                },
                "effectiveCancellationDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the order is cancelled."
                },
                "requestedCancellationDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the submitter wants the order to be cancelled"
                },
                "state": {
                    "$ref": "#/definitions/TaskStateType",
                    "description": "Tracks the lifecycle status of the cancellation request, such as Acknowledged, Rejected, InProgress, Pending and so on."
                },
                "workOrder": {
                    "$ref": "#/definitions/WorkOrderRef"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "CancelWorkOrder_Create": {
            "type": "object",
            "description": "\nSkipped properties: id,href,state,effectiveCancellationDate",
            "required": [
                "workOrder"
            ],
            "properties": {
                "cancellationReason": {
                    "type": "string",
                    "description": "Reason why the order is cancelled."
                },
                "requestedCancellationDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the submitter wants the order to be cancelled"
                },
                "workOrder": {
                    "$ref": "#/definitions/WorkOrderRef"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "Characteristic": {
            "type": "object",
            "description": "Describes a given characteristic of an object or entity through a name/value pair.",
            "required": [
                "name",
                "value"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the characteristic"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the characteristic"
                },
                "valueType": {
                    "type": "string",
                    "description": "Data type of the value of the characteristic"
                },
                "characteristicRelationship": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CharacteristicRelationship"
                    }
                },
                "value": {
                    "$ref": "#/definitions/Any",
                    "description": "The value of the characteristic"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "CharacteristicRelationship": {
            "type": "object",
            "description": "Another Characteristic that is related to the current Characteristic;",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the characteristic"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "relationshipType": {
                    "type": "string",
                    "description": "The type of relationship"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "ContactMedium": {
            "type": "object",
            "description": "Indicates the contact medium that could be used to contact the party.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "mediumType": {
                    "type": "string",
                    "description": "Type of the contact medium, such as: email address, telephone number, postal address"
                },
                "preferred": {
                    "type": "boolean",
                    "description": "If true, indicates that is the preferred contact medium"
                },
                "characteristic": {
                    "$ref": "#/definitions/MediumCharacteristic",
                    "description": "Any additional characteristic(s) of this contact medium"
                },
                "validFor": {
                    "$ref": "#/definitions/TimePeriod",
                    "description": "The time period that the contact medium is valid for"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "Entity": {
            "type": "object",
            "description": "Base entity schema for use in TMForum Open-APIs",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "EntityRef": {
            "type": "object",
            "description": "Entity reference schema to be use for all entityRef class.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the related entity."
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            },
            "required": [
                "id"
            ]
        },
        "Extensible": {
            "type": "object",
            "description": "Base Extensible schema for use in TMForum Open-APIs",
            "properties": {
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "ExternalReference": {
            "type": "object",
            "description": "External reference of the individual or reference in other system",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "externalReferenceType": {
                    "type": "string",
                    "description": "Type of the external reference"
                },
                "name": {
                    "type": "string",
                    "description": "External reference name"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "MediumCharacteristic": {
            "type": "object",
            "description": "Describes the contact medium characteristics that could be used to contact a party (an individual or an organization)",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "city": {
                    "type": "string",
                    "description": "The city"
                },
                "contactType": {
                    "type": "string",
                    "description": "The type of contact, for example: phone number such as mobile, fixed home, fixed office. postal address such as shipping instalation\u2026"
                },
                "country": {
                    "type": "string",
                    "description": "The country"
                },
                "emailAddress": {
                    "type": "string",
                    "description": "Full email address in standard format"
                },
                "faxNumber": {
                    "type": "string",
                    "description": "The fax number of the contact"
                },
                "phoneNumber": {
                    "type": "string",
                    "description": "The primary phone number of the contact"
                },
                "postCode": {
                    "type": "string",
                    "description": "Postcode"
                },
                "socialNetworkId": {
                    "type": "string",
                    "description": "Identifier as a member of a social network"
                },
                "stateOrProvince": {
                    "type": "string",
                    "description": "State or province"
                },
                "street1": {
                    "type": "string",
                    "description": "Describes the street"
                },
                "street2": {
                    "type": "string",
                    "description": "Complementary street description"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "Money": {
            "type": "object",
            "description": "A base / value business entity used to represent money",
            "properties": {
                "unit": {
                    "type": "string",
                    "description": "Currency (ISO4217 norm uses 3 letters to define the currency)"
                },
                "value": {
                    "type": "number",
                    "format": "float",
                    "description": "A signed floating point number, the meaning of the sign is according to the context of the API that uses this Data type"
                }
            }
        },
        "Note": {
            "type": "object",
            "description": "Extra information about a given entity",
            "required": [
                "text"
            ],
            "properties": {
                "id": {
                    "example": [
                        "afa9-3d90aaa8da0f"
                    ],
                    "type": "string",
                    "description": "Identifier of the note within its containing entity"
                },
                "author": {
                    "example": [
                        "Mr. N. Bene"
                    ],
                    "type": "string",
                    "description": "Author of the note"
                },
                "date": {
                    "example": [
                        "2020-11-20T08:00:00Z"
                    ],
                    "type": "string",
                    "format": "date-time",
                    "description": "Date of the note"
                },
                "text": {
                    "example": [
                        "This is important"
                    ],
                    "type": "string",
                    "description": "Text of the note"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "OrderItemActionType": {
            "type": "string",
            "description": "action to be performed on the product",
            "enum": [
                "add",
                "modify",
                "delete",
                "noChange"
            ]
        },
        "OrderItemPrice": {
            "type": "object",
            "description": "An amount, usually of money, that represents the actual price paid by the Customer for this item or this order",
            "required": [
                "price",
                "priceType"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "description": {
                    "type": "string",
                    "description": "A narrative that explains in detail the semantics of this order item price."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the order item price"
                },
                "priceType": {
                    "type": "string",
                    "description": "A category that describes the price, such as recurring, discount, allowance, penalty, and so forth"
                },
                "recurringChargePeriod": {
                    "type": "string",
                    "description": "Could be month, week..."
                },
                "unitOfMeasure": {
                    "type": "string",
                    "description": "Could be minutes, GB..."
                },
                "billingAccount": {
                    "$ref": "#/definitions/BillingAccountRef"
                },
                "price": {
                    "$ref": "#/definitions/Price"
                },
                "priceAlteration": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PriceAlteration"
                    }
                },
                "productOfferingPrice": {
                    "$ref": "#/definitions/ProductOfferingPriceRef"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "OrderItemRef": {
            "type": "object",
            "description": "ProductOrder (ProductOrder) .The product order which the recommendation is related with.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the related entity."
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            },
            "required": [
                "id"
            ]
        },
        "OrderItemRelationship": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "relationshipType": {
                    "type": "string",
                    "description": "The type of order item relationship"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "OrderPrice": {
            "type": "object",
            "description": "An amount, usually of money, that represents the actual price paid by the Customer for this item or this order",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "description": {
                    "type": "string",
                    "description": "A narrative that explains in detail the semantics of this order item price."
                },
                "name": {
                    "type": "string",
                    "description": "A short descriptive name such as \"Subscription price\"."
                },
                "priceType": {
                    "type": "string",
                    "description": "A category that describes the price, such as recurring, discount, allowance, penalty, and so forth"
                },
                "recurringChargePeriod": {
                    "type": "string",
                    "description": "Could be month, week..."
                },
                "unitOfMeasure": {
                    "type": "string",
                    "description": "Could be minutes, GB..."
                },
                "billingAccount": {
                    "$ref": "#/definitions/BillingAccountRef",
                    "description": "A reference to a billing account used for paid the order price charge"
                },
                "price": {
                    "$ref": "#/definitions/Price",
                    "description": "a structure used to define price amount"
                },
                "priceAlteration": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PriceAlteration"
                    },
                    "description": "a strucuture used to describe a price alteration"
                },
                "productOfferingPrice": {
                    "$ref": "#/definitions/ProductOfferingPriceRef",
                    "description": "An amount, usually of money, that is asked for or allowed when a ProductOffering is bought, rented, or leased. The price is valid for a defined period of time."
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "OrderRef": {
            "type": "object",
            "description": "ProductOrder (ProductOrder) .The product order which the recommendation is related with.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the related entity."
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            },
            "required": [
                "id"
            ]
        },
        "OrderRelationship": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "href": {
                    "type": "string"
                },
                "relationshipType": {
                    "type": "string",
                    "description": "The type of order relationship"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "Party": {
            "type": "object",
            "description": "Generic Party structure used to define commonalities between sub concepts of Individual and Organization.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the organization"
                },
                "href": {
                    "type": "string",
                    "description": "Hyperlink to access the organization"
                },
                "contactMedium": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ContactMedium"
                    }
                },
                "creditRating": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PartyCreditProfile"
                    }
                },
                "externalReference": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ExternalReference"
                    }
                },
                "partyCharacteristic": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Characteristic"
                    }
                },
                "relatedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedParty"
                    }
                },
                "taxExemptionCertificate": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TaxExemptionCertificate"
                    }
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "PartyCreditProfile": {
            "type": "object",
            "description": "An individual might be evaluated for its worthiness and this evaluation might be based on a credit rating given by a credit agency.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "creditAgencyName": {
                    "type": "string",
                    "description": "Name of the credit agency giving the score"
                },
                "creditAgencyType": {
                    "type": "string",
                    "description": "Type of the credit agency giving the score"
                },
                "ratingReference": {
                    "type": "string",
                    "description": "Reference corresponding to the credit rating"
                },
                "ratingScore": {
                    "type": "integer",
                    "description": "A measure of a party\u2019s creditworthiness calculated on the basis of a combination of factors such as their income and credit history"
                },
                "validFor": {
                    "$ref": "#/definitions/TimePeriod"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "PartyRef": {
            "type": "object",
            "required": [
                "@referredType"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the related entity."
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        },
        "PartyRefOrValue": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the organization"
                },
                "href": {
                    "type": "string",
                    "description": "Hyperlink to access the organization"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the related entity."
                },
                "contactMedium": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ContactMedium"
                    }
                },
                "creditRating": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PartyCreditProfile"
                    }
                },
                "externalReference": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ExternalReference"
                    }
                },
                "partyCharacteristic": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Characteristic"
                    }
                },
                "relatedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedParty"
                    }
                },
                "taxExemptionCertificate": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TaxExemptionCertificate"
                    }
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        },
        "PaymentRef": {
            "type": "object",
            "description": "If an immediate payment has been done at the product order submission, the payment information are captured and stored (as a reference) in the order.",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "name": {
                    "type": "string",
                    "description": "A name for the payment"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        },
        "Place": {
            "type": "object",
            "description": "Place reference. Place defines the places where the products are sold or delivered.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the place"
                },
                "href": {
                    "type": "string",
                    "description": "Unique reference of the place"
                },
                "name": {
                    "type": "string",
                    "description": "A user-friendly name for the place, such as [Paris Store], [London Store], [Main Home]"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "PlaceRef": {
            "type": "object",
            "description": "Place reference. PlaceRef defines the placeRefs where the products are sold or delivered.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the related entity."
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            },
            "required": [
                "id"
            ]
        },
        "PlaceRefOrValue": {
            "type": "object",
            "description": "A place defines a place described by reference or by value linked to a specific entity. The polymorphic attributes @type, @schemaLocation & @referredType are related to the place entity and not the RelatedPlaceRefOrValue class itself",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the place"
                },
                "href": {
                    "type": "string",
                    "description": "Unique reference of the place"
                },
                "name": {
                    "type": "string",
                    "description": "A user-friendly name for the place, such as [Paris Store], [London Store], [Main Home]"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        },
        "Price": {
            "type": "object",
            "description": "Provides all amounts (tax included, duty free, tax rate), used currency and percentage to apply for Price Alteration.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "percentage": {
                    "type": "number",
                    "format": "float",
                    "description": "Percentage to apply for ProdOfferPriceAlteration"
                },
                "taxRate": {
                    "type": "number",
                    "format": "float",
                    "description": "Tax rate"
                },
                "dutyFreeAmount": {
                    "$ref": "#/definitions/Money",
                    "description": "All taxes excluded amount (expressed in the given currency)"
                },
                "taxIncludedAmount": {
                    "$ref": "#/definitions/Money",
                    "description": "All taxes included amount (expressed in the given currency)"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "PriceAlteration": {
            "type": "object",
            "description": "Is an amount, usually of money, that modifies the price charged for an order item.",
            "required": [
                "price",
                "priceType"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "applicationDuration": {
                    "type": "integer",
                    "description": "Duration during which the alteration applies on the order item price (for instance 2 months free of charge for the recurring charge)"
                },
                "description": {
                    "type": "string",
                    "description": "A narrative that explains in detail the semantics of this order item price alteration"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the order item price alteration"
                },
                "priceType": {
                    "type": "string",
                    "description": "A category that describes the price such as recurring, one time and usage."
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority level for applying this alteration among all the defined alterations on the order item price"
                },
                "recurringChargePeriod": {
                    "type": "string",
                    "description": "Could be month, week..."
                },
                "unitOfMeasure": {
                    "type": "string",
                    "description": "Could be minutes, GB..."
                },
                "price": {
                    "$ref": "#/definitions/Price"
                },
                "productOfferingPrice": {
                    "$ref": "#/definitions/ProductOfferingPriceRef"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "PriceType": {
            "type": "string",
            "description": "Describes the type of price (ex: oneTime, recurring, etc)",
            "enum": [
                "recurring",
                "oneTime",
                "usage"
            ]
        },
        "ProductOfferingPriceRef": {
            "type": "object",
            "description": "ProductPriceOffering reference. An amount, usually of money, that is asked for or allowed when a ProductOffering is bought, rented, or leased",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the related entity."
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            },
            "required": [
                "id"
            ]
        },
        "Quantity": {
            "type": "object",
            "description": "An amount in a given unit",
            "properties": {
                "amount": {
                    "default": 1,
                    "type": "number",
                    "format": "float",
                    "description": "Numeric value in a given unit"
                },
                "units": {
                    "type": "string",
                    "description": "Unit"
                }
            }
        },
        "QuoteRef": {
            "type": "object",
            "description": "It's a Quote that has been executed previously",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the related entity."
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            },
            "required": [
                "id"
            ]
        },
        "RelatedChannel": {
            "type": "object",
            "description": "Related channel to another entity. May be online web, mobile app, social ,etc.",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the channel."
                },
                "role": {
                    "type": "string",
                    "description": "Role playing by the channel."
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        },
        "RelatedEntity": {
            "type": "object",
            "description": "A reference to an entity, where the type of the entity is not known in advance.",
            "required": [
                "@referredType",
                "id",
                "role"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the related entity."
                },
                "role": {
                    "type": "string",
                    "description": "The role of an entity."
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        },
        "RelatedParty": {
            "type": "object",
            "description": "Related Entity reference. A related party defines party or party role linked to a specific entity.",
            "required": [
                "@referredType",
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the related entity."
                },
                "role": {
                    "type": "string",
                    "description": "Role played by the related party"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        },
        "RelatedPlaceRefOrValue": {
            "type": "object",
            "description": "Related Entity reference. A related place defines a place described by reference or by value linked to a specific entity. The polymorphic attributes @type, @schemaLocation & @referredType are related to the place entity and not the RelatedPlaceRefOrValue class itself",
            "required": [
                "role"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the place"
                },
                "href": {
                    "type": "string",
                    "description": "Unique reference of the place"
                },
                "name": {
                    "type": "string",
                    "description": "A user-friendly name for the place, such as [Paris Store], [London Store], [Main Home]"
                },
                "role": {
                    "type": "string"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        },
        "RelatedWorkOrderItem": {
            "type": "object",
            "description": "RelatedWorkOrderItem (WorkOrder item). The work order item which triggered this unit of work's creation/change/termination.",
            "required": [
                "orderItemId",
                "workOrderId"
            ],
            "properties": {
                "orderItemAction": {
                    "type": "string",
                    "description": "Action of the order item for this unit of work\r\n"
                },
                "orderItemId": {
                    "type": "string",
                    "description": "Identifier of the work order item where the unit of work was managed"
                },
                "role": {
                    "type": "string",
                    "description": "Role of the work order item for this unitof work\r\n"
                },
                "workOrderHref": {
                    "type": "string",
                    "description": "Reference of the related entity."
                },
                "workOrderId": {
                    "type": "string",
                    "description": "Unique identifier of a related entity."
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        },
        "TaskStateType": {
            "type": "string",
            "description": "Possible values for the state of a task",
            "enum": [
                "accepted",
                "terminatedWithError",
                "inProgress",
                "done"
            ]
        },
        "TaxDefinition": {
            "type": "object",
            "description": "Reference of a tax definition. A tax is levied by an authorized tax jurisdiction. There are many different types of tax (Federal Tax levied by the US Government, State Tax levied by the State of California,\u2026).",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the tax."
                },
                "jurisdictionLevel": {
                    "example": "Country",
                    "type": "string",
                    "description": "Level of the jurisdiction that levies the tax"
                },
                "jurisdictionName": {
                    "example": "USA",
                    "type": "string",
                    "description": "Name of the jurisdiction that levies the tax"
                },
                "name": {
                    "type": "string",
                    "description": "Tax name."
                },
                "taxType": {
                    "example": "VAT",
                    "type": "string",
                    "description": "Type of the tax."
                },
                "validFor": {
                    "$ref": "#/definitions/TimePeriod",
                    "description": "The period of time for which the tax applies, might be set for example if it is known that the jurisdiction will cease to apply the tax after a certain date."
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "TaxExemptionCertificate": {
            "type": "object",
            "description": "A tax exemption certificate represents a tax exemption granted to a party (individual or organization) by a tax jurisdiction which may be a city, state, country,... An exemption has a certificate identifier (received from the jurisdiction that levied the tax) and a validity period. An exemption is per tax types and determines for each type of tax what portion of the tax is exempted (partial by percentage or complete) via the tax definition.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Identifier of the tax exemption within list of the exemptions"
                },
                "certificateNumber": {
                    "type": "string",
                    "description": "Identifier of a document that shows proof of exemption from taxes for the taxing jurisdiction"
                },
                "issuingJurisdiction": {
                    "example": "USA",
                    "type": "string",
                    "description": "Name of the jurisdiction that issued the exemption"
                },
                "reason": {
                    "type": "string",
                    "description": "Reason for the tax exemption"
                },
                "attachment": {
                    "$ref": "#/definitions/AttachmentRefOrValue",
                    "description": "The actual certificate contents, if such is supplied by the issuing jurisdiction"
                },
                "taxDefinition": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TaxDefinition"
                    },
                    "description": "A list of taxes that are covered by the exemption, e.g. City Tax, State Tax. The definition would include the exemption (e.g. for a rate exemption 0% would be a full exemption, 5% could be a partial exemption if the actual rate was 10%)."
                },
                "validFor": {
                    "$ref": "#/definitions/TimePeriod",
                    "description": "The period of time for which the exemption is valid"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "TimePeriod": {
            "type": "object",
            "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
            "properties": {
                "endDateTime": {
                    "example": "1985-04-12T23:20:50.52Z",
                    "type": "string",
                    "format": "date-time",
                    "description": "End of the time period, using IETC-RFC-3339 format"
                },
                "startDateTime": {
                    "example": "1985-04-12T23:20:50.52Z",
                    "type": "string",
                    "format": "date-time",
                    "description": "Start of the time period, using IETC-RFC-3339 format"
                }
            }
        },
        "TimeSlot": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the TimeSlot"
                },
                "href": {
                    "type": "string",
                    "description": "Reference of the TimeSlot"
                },
                "relatedParty": {
                    "$ref": "#/definitions/RelatedParty",
                    "description": "RelatedParty reference. A related party defines party or party role linked to a specific entity."
                },
                "validFor": {
                    "$ref": "#/definitions/TimePeriod",
                    "description": "Start date and end date of the timeSlot"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "Work": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "completionDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the order was completed"
                },
                "description": {
                    "type": "string",
                    "description": "Is the description of the work unit. It could be the same as the description of the work specification."
                },
                "expectedCompletionDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the requester expects the work to be completed"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the work unit. It could be the same as the name of the work specification."
                },
                "orderDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date at which the work order which triggered this unit of work's creation/change/termination was created."
                },
                "percentageComplete": {
                    "type": "number",
                    "format": "float"
                },
                "workPriority": {
                    "type": "string"
                },
                "workType": {
                    "type": "string"
                },
                "actualDuration": {
                    "$ref": "#/definitions/Quantity"
                },
                "agreement": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AgreementRef"
                    }
                },
                "appointment": {
                    "$ref": "#/definitions/AppointmentRef"
                },
                "currentDuration": {
                    "$ref": "#/definitions/Quantity"
                },
                "deliveryTimeSlot": {
                    "$ref": "#/definitions/TimePeriod"
                },
                "note": {
                    "$ref": "#/definitions/Note"
                },
                "place": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedPlaceRefOrValue"
                    }
                },
                "plannedDuration": {
                    "$ref": "#/definitions/Quantity"
                },
                "quantity": {
                    "$ref": "#/definitions/Quantity"
                },
                "relatedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedParty"
                    }
                },
                "scheduledDuration": {
                    "$ref": "#/definitions/Quantity"
                },
                "state": {
                    "$ref": "#/definitions/WorkStateType"
                },
                "work": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkRefOrValue"
                    }
                },
                "workCharacteristic": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Characteristic"
                    }
                },
                "workOrderItem": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedWorkOrderItem"
                    }
                },
                "workPrice": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkPrice"
                    }
                },
                "workRelationship": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkRelationship"
                    }
                },
                "workSpecification": {
                    "$ref": "#/definitions/WorkSpecificationRef"
                },
                "workforceEmployeeAssignment": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkforceEmployeeAssignment"
                    }
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "WorkOrder": {
            "type": "object",
            "required": [
                "workOrderItem"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "ID created on repository side"
                },
                "href": {
                    "type": "string",
                    "description": "Hyperlink to access the order"
                },
                "cancellationDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the order is cancelled. This is used when order is cancelled. "
                },
                "cancellationReason": {
                    "type": "string",
                    "description": "Reason why the order is cancelled. This is used when order is cancelled. "
                },
                "category": {
                    "type": "string",
                    "description": "Used to categorize the order from a business perspective that can be useful for the OM system (e.g. \"enterprise\", \"residential\", ...)"
                },
                "completionDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the order was completed"
                },
                "description": {
                    "type": "string",
                    "description": "A free-text description of the order"
                },
                "expectedCompletionDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Expected completion date amended by the provider"
                },
                "externalId": {
                    "type": "string",
                    "description": "ID given by the consumer to facilitate searches"
                },
                "notificationContact": {
                    "type": "string",
                    "description": "Contact attached to the order to send back information regarding this order"
                },
                "orderDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the order was created"
                },
                "priority": {
                    "type": "string",
                    "description": "A way that can be used by consumers to prioritize orders in OM system (from 0 to 4 : 0 is the highest priority, and 4 the lowest)"
                },
                "requestedCompletionDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Requested completion date from the requestors perspective"
                },
                "requestedStartDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Order fulfillment start date wished by the requestor. This is used when, for any reason, requestor cannot allow provider to begin to operationally begin the fulfillment before a date."
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the order started"
                },
                "stateChangeDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Last change date of the order state."
                },
                "version": {
                    "type": "string",
                    "description": "The version number allows for the tracking of multiple evolution steps during the lifecycle of the entity.\r\nIt can be correlated to the revision number related to the lifecycle management change of the entity."
                },
                "agreement": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AgreementRef"
                    },
                    "description": "A reference to an agreement defined in the context of the work order"
                },
                "appointment": {
                    "$ref": "#/definitions/AppointmentRef"
                },
                "billingAccount": {
                    "$ref": "#/definitions/BillingAccountRef"
                },
                "channel": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedChannel"
                    }
                },
                "note": {
                    "$ref": "#/definitions/Note"
                },
                "order": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrderRef"
                    }
                },
                "orderTotalPrice": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrderPrice"
                    }
                },
                "payment": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PaymentRef"
                    }
                },
                "place": {
                    "$ref": "#/definitions/PlaceRefOrValue"
                },
                "quote": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QuoteRef"
                    }
                },
                "relatedEntity": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedEntity"
                    }
                },
                "relatedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedParty"
                    }
                },
                "state": {
                    "$ref": "#/definitions/WorkOrderStateType"
                },
                "workOrderItem": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkOrderItem"
                    },
                    "minItems": 1
                },
                "workOrderRelationship": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrderRelationship"
                    }
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "WorkOrder_Create": {
            "type": "object",
            "description": "\nSkipped properties: id,href,completionDate,orderDate,state,expectedCompletionDate,workOrderItem.state",
            "required": [
                "workOrderItem"
            ],
            "properties": {
                "cancellationDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the order is cancelled. This is used when order is cancelled. "
                },
                "cancellationReason": {
                    "type": "string",
                    "description": "Reason why the order is cancelled. This is used when order is cancelled. "
                },
                "category": {
                    "type": "string",
                    "description": "Used to categorize the order from a business perspective that can be useful for the OM system (e.g. \"enterprise\", \"residential\", ...)"
                },
                "description": {
                    "type": "string",
                    "description": "A free-text description of the order"
                },
                "externalId": {
                    "type": "string",
                    "description": "ID given by the consumer to facilitate searches"
                },
                "notificationContact": {
                    "type": "string",
                    "description": "Contact attached to the order to send back information regarding this order"
                },
                "priority": {
                    "type": "string",
                    "description": "A way that can be used by consumers to prioritize orders in OM system (from 0 to 4 : 0 is the highest priority, and 4 the lowest)"
                },
                "requestedCompletionDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Requested completion date from the requestors perspective"
                },
                "requestedStartDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Order fulfillment start date wished by the requestor. This is used when, for any reason, requestor cannot allow provider to begin to operationally begin the fulfillment before a date."
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the order started"
                },
                "stateChangeDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Last change date of the order state."
                },
                "version": {
                    "type": "string",
                    "description": "The version number allows for the tracking of multiple evolution steps during the lifecycle of the entity.\r\nIt can be correlated to the revision number related to the lifecycle management change of the entity."
                },
                "agreement": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AgreementRef"
                    },
                    "description": "A reference to an agreement defined in the context of the work order"
                },
                "appointment": {
                    "$ref": "#/definitions/AppointmentRef"
                },
                "billingAccount": {
                    "$ref": "#/definitions/BillingAccountRef"
                },
                "channel": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedChannel"
                    }
                },
                "note": {
                    "$ref": "#/definitions/Note"
                },
                "order": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrderRef"
                    }
                },
                "orderTotalPrice": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrderPrice"
                    }
                },
                "payment": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PaymentRef"
                    }
                },
                "place": {
                    "$ref": "#/definitions/PlaceRefOrValue"
                },
                "quote": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QuoteRef"
                    }
                },
                "relatedEntity": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedEntity"
                    }
                },
                "relatedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedParty"
                    }
                },
                "workOrderItem": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkOrderItem"
                    },
                    "minItems": 1
                },
                "workOrderRelationship": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrderRelationship"
                    }
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "WorkOrder_Update": {
            "type": "object",
            "description": "\nSkipped properties: id,href,orderDate",
            "required": [
                "workOrderItem"
            ],
            "properties": {
                "cancellationDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the order is cancelled. This is used when order is cancelled. "
                },
                "cancellationReason": {
                    "type": "string",
                    "description": "Reason why the order is cancelled. This is used when order is cancelled. "
                },
                "category": {
                    "type": "string",
                    "description": "Used to categorize the order from a business perspective that can be useful for the OM system (e.g. \"enterprise\", \"residential\", ...)"
                },
                "completionDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the order was completed"
                },
                "description": {
                    "type": "string",
                    "description": "A free-text description of the order"
                },
                "expectedCompletionDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Expected completion date amended by the provider"
                },
                "externalId": {
                    "type": "string",
                    "description": "ID given by the consumer to facilitate searches"
                },
                "notificationContact": {
                    "type": "string",
                    "description": "Contact attached to the order to send back information regarding this order"
                },
                "priority": {
                    "type": "string",
                    "description": "A way that can be used by consumers to prioritize orders in OM system (from 0 to 4 : 0 is the highest priority, and 4 the lowest)"
                },
                "requestedCompletionDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Requested completion date from the requestors perspective"
                },
                "requestedStartDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Order fulfillment start date wished by the requestor. This is used when, for any reason, requestor cannot allow provider to begin to operationally begin the fulfillment before a date."
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the order started"
                },
                "stateChangeDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Last change date of the order state."
                },
                "version": {
                    "type": "string",
                    "description": "The version number allows for the tracking of multiple evolution steps during the lifecycle of the entity.\r\nIt can be correlated to the revision number related to the lifecycle management change of the entity."
                },
                "agreement": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AgreementRef"
                    },
                    "description": "A reference to an agreement defined in the context of the work order"
                },
                "appointment": {
                    "$ref": "#/definitions/AppointmentRef"
                },
                "billingAccount": {
                    "$ref": "#/definitions/BillingAccountRef"
                },
                "channel": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedChannel"
                    }
                },
                "note": {
                    "$ref": "#/definitions/Note"
                },
                "order": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrderRef"
                    }
                },
                "orderTotalPrice": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrderPrice"
                    }
                },
                "payment": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PaymentRef"
                    }
                },
                "place": {
                    "$ref": "#/definitions/PlaceRefOrValue"
                },
                "quote": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QuoteRef"
                    }
                },
                "relatedEntity": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedEntity"
                    }
                },
                "relatedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedParty"
                    }
                },
                "state": {
                    "$ref": "#/definitions/WorkOrderStateType"
                },
                "workOrderItem": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkOrderItem"
                    },
                    "minItems": 1
                },
                "workOrderRelationship": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrderRelationship"
                    }
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "WorkOrderItem": {
            "type": "object",
            "description": "An identified part of the order. A work order is decomposed into one or more order items.",
            "required": [
                "id",
                "action"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Identifier of the line item (generally it is a sequence number 01, 02, 03, ...)"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the Order Item"
                },
                "action": {
                    "$ref": "#/definitions/OrderItemActionType"
                },
                "appointment": {
                    "$ref": "#/definitions/AppointmentRef"
                },
                "billingAccount": {
                    "$ref": "#/definitions/BillingAccountRef"
                },
                "itemPrice": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrderItemPrice"
                    }
                },
                "itemTotalPrice": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrderItemPrice"
                    }
                },
                "note": {
                    "$ref": "#/definitions/Note"
                },
                "orderItem": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrderItemRef"
                    }
                },
                "payment": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PaymentRef"
                    }
                },
                "relatedEntity": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedEntity"
                    }
                },
                "state": {
                    "$ref": "#/definitions/WorkOrderItemStateType"
                },
                "work": {
                    "$ref": "#/definitions/WorkRefOrValue"
                },
                "workOrderItem": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkOrderItem"
                    }
                },
                "workOrderItemRelationship": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrderItemRelationship"
                    }
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "WorkOrderItemStateType": {
            "type": "string",
            "description": "Possible values for the state of the order",
            "enum": [
                "acknowledged",
                "rejected",
                "pending",
                "held",
                "inProgress",
                "cancelled",
                "completed",
                "failed",
                "partial",
                "assessingCancellation",
                "pendingCancellation"
            ]
        },
        "WorkOrderRef": {
            "type": "object",
            "description": "WorkOrder reference",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the related entity."
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        },
        "WorkOrderStateType": {
            "type": "string",
            "description": "Possible values for the state of the order",
            "enum": [
                "acknowledged",
                "rejected",
                "pending",
                "held",
                "inProgress",
                "cancelled",
                "completed",
                "failed",
                "partial",
                "assessingCancellation",
                "pendingCancellation"
            ]
        },
        "WorkPrice": {
            "type": "object",
            "description": "An amount, usually of money, that represents the actual price paid by the Customer for this item or this order.",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A narrative that explains in detail the semantics of this shipment price."
                },
                "name": {
                    "type": "string",
                    "description": "A short descriptive name such as \"Subscription price\"."
                },
                "recurringChargePeriod": {
                    "type": "string",
                    "description": "Could be month, week..."
                },
                "unitOfMeasure": {
                    "type": "string",
                    "description": "Could be minutes, GB..."
                },
                "billingAccount": {
                    "$ref": "#/definitions/BillingAccountRef"
                },
                "price": {
                    "$ref": "#/definitions/Price"
                },
                "priceAlteration": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PriceAlteration"
                    }
                },
                "priceType": {
                    "$ref": "#/definitions/PriceType"
                },
                "productOfferingPrice": {
                    "$ref": "#/definitions/ProductOfferingPriceRef"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "WorkRef": {
            "type": "object",
            "description": "Unit of Work reference",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the related entity."
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            },
            "required": [
                "id"
            ]
        },
        "WorkRefOrValue": {
            "type": "object",
            "description": "A Unit of Work defined by value or existing defined by reference. The polymorphic attributes @type, @schemaLocation &amp; @referredType are related to the work entity and not the related WorkRefOrValue class itself",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "completionDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the order was completed"
                },
                "description": {
                    "type": "string",
                    "description": "Is the description of the work unit. It could be the same as the description of the work specification."
                },
                "expectedCompletionDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the requester expects the work to be completed"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the related entity."
                },
                "orderDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date at which the work order which triggered this unit of work's creation/change/termination was created."
                },
                "percentageComplete": {
                    "type": "number",
                    "format": "float"
                },
                "workPriority": {
                    "type": "string"
                },
                "workType": {
                    "type": "string"
                },
                "actualDuration": {
                    "$ref": "#/definitions/Quantity"
                },
                "agreement": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AgreementRef"
                    }
                },
                "appointment": {
                    "$ref": "#/definitions/AppointmentRef"
                },
                "currentDuration": {
                    "$ref": "#/definitions/Quantity"
                },
                "deliveryTimeSlot": {
                    "$ref": "#/definitions/TimePeriod"
                },
                "note": {
                    "$ref": "#/definitions/Note"
                },
                "place": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedPlaceRefOrValue"
                    }
                },
                "plannedDuration": {
                    "$ref": "#/definitions/Quantity"
                },
                "quantity": {
                    "$ref": "#/definitions/Quantity"
                },
                "relatedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedParty"
                    }
                },
                "scheduledDuration": {
                    "$ref": "#/definitions/Quantity"
                },
                "state": {
                    "$ref": "#/definitions/WorkStateType"
                },
                "work": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkRefOrValue"
                    }
                },
                "workCharacteristic": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Characteristic"
                    }
                },
                "workOrderItem": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedWorkOrderItem"
                    }
                },
                "workPrice": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkPrice"
                    }
                },
                "workRelationship": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkRelationship"
                    }
                },
                "workSpecification": {
                    "$ref": "#/definitions/WorkSpecificationRef"
                },
                "workforceEmployeeAssignment": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkforceEmployeeAssignment"
                    }
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        },
        "WorkRelationship": {
            "type": "object",
            "required": [
                "relationshipType"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "relationshipType": {
                    "type": "string"
                },
                "work": {
                    "$ref": "#/definitions/WorkRefOrValue"
                },
                "workRelationshipCharacteristic": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Characteristic"
                    }
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "WorkSpecificationRef": {
            "type": "object",
            "description": "Work specification reference",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the related entity."
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            },
            "required": [
                "id"
            ]
        },
        "WorkStateType": {
            "type": "string",
            "description": "",
            "enum": [
                "acknowledged",
                "rejected",
                "pending",
                "held",
                "inProgress",
                "cancelled",
                "completed",
                "failed",
                "partial"
            ]
        },
        "WorkforceEmployeeAssignment": {
            "type": "object",
            "description": "Represents an assignment of a particular WorforceEmployeeRole for a particular unit of work in a specific timeframe. For example, assignment of a person in a network engineer role to a trouble shooting unit of work for at least 2 hours. The assignment is associated with a TimeSlot.",
            "required": [
                "description",
                "id",
                "skillType",
                "workforceEmployee"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "skillType": {
                    "type": "string",
                    "description": "Ex: primarySkill, secondarySkill"
                },
                "state": {
                    "$ref": "#/definitions/WorkforceEmployeeAssignmentStateType",
                    "description": "Ex: primarySkill, secondarySkill"
                },
                "timeSlot": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TimeSlot"
                    }
                },
                "workforceEmployee": {
                    "$ref": "#/definitions/PartyRefOrValue"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "WorkforceEmployeeAssignmentStateType": {
            "type": "string",
            "description": "",
            "enum": [
                "acknowledged",
                "rejected",
                "pending",
                "held",
                "inProgress",
                "cancelled",
                "completed",
                "failed",
                "partial"
            ]
        },
        "EventSubscription": {
            "type": "object",
            "description": "Sets the communication endpoint address the service instance must use to deliver notification information",
            "required": [
                "id",
                "callback"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Id of the listener"
                },
                "callback": {
                    "type": "string",
                    "description": "The callback being registered."
                },
                "query": {
                    "type": "string",
                    "description": "additional data to be passed"
                }
            }
        },
        "EventSubscriptionInput": {
            "type": "object",
            "description": "Sets the communication endpoint address the service instance must use to deliver notification information",
            "required": [
                "callback"
            ],
            "properties": {
                "callback": {
                    "type": "string",
                    "description": "The callback being registered."
                },
                "query": {
                    "type": "string",
                    "description": "additional data to be passed"
                }
            }
        },
        "WorkOrderCreateEvent": {
            "type": "object",
            "description": "The notification data structure",
            "properties": {
                "event": {
                    "description": "The event payload linked to the involved resource object",
                    "$ref": "#/definitions/WorkOrderCreateEventPayload"
                },
                "eventId": {
                    "type": "string",
                    "description": "The identifier of the notification."
                },
                "eventTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time of the event occurrence."
                },
                "eventType": {
                    "type": "string",
                    "description": "The type of the notification."
                },
                "correlationId": {
                    "type": "string",
                    "description": "The correlation id for this event."
                },
                "domain": {
                    "type": "string",
                    "description": "The domain of the event."
                },
                "title": {
                    "type": "string",
                    "description": "The title of the event."
                },
                "description": {
                    "type": "string",
                    "description": "An explnatory of the event."
                },
                "priority": {
                    "type": "string",
                    "description": "A priority."
                },
                "timeOcurred": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time the event occured."
                }
            }
        },
        "WorkOrderCreateEventPayload": {
            "type": "object",
            "description": "The event data structure",
            "properties": {
                "workOrder": {
                    "description": "The involved resource data for the event",
                    "$ref": "#/definitions/WorkOrder"
                }
            }
        },
        "WorkOrderAttributeValueChangeEvent": {
            "type": "object",
            "description": "The notification data structure",
            "properties": {
                "eventId": {
                    "type": "string",
                    "description": "The identifier of the notification."
                },
                "eventTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time of the event occurrence."
                },
                "eventType": {
                    "type": "string",
                    "description": "The type of the notification."
                },
                "correlationId": {
                    "type": "string",
                    "description": "The correlation id for this event."
                },
                "domain": {
                    "type": "string",
                    "description": "The domain of the event."
                },
                "title": {
                    "type": "string",
                    "description": "The title of the event."
                },
                "description": {
                    "type": "string",
                    "description": "An explnatory of the event."
                },
                "priority": {
                    "type": "string",
                    "description": "A priority."
                },
                "timeOcurred": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time the event occured."
                },
                "fieldPath": {
                    "type": "string",
                    "description": "The path identifying the object field concerned by this notification."
                },
                "event": {
                    "description": "The event payload linked to the involved resource object",
                    "$ref": "#/definitions/WorkOrderAttributeValueChangeEventPayload"
                }
            }
        },
        "WorkOrderAttributeValueChangeEventPayload": {
            "type": "object",
            "description": "The event data structure",
            "properties": {
                "workOrder": {
                    "description": "The involved resource data for the event",
                    "$ref": "#/definitions/WorkOrder"
                }
            }
        },
        "WorkOrderDeleteEvent": {
            "type": "object",
            "description": "The notification data structure",
            "properties": {
                "event": {
                    "description": "The event payload linked to the involved resource object",
                    "$ref": "#/definitions/WorkOrderDeleteEventPayload"
                },
                "eventId": {
                    "type": "string",
                    "description": "The identifier of the notification."
                },
                "eventTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time of the event occurrence."
                },
                "eventType": {
                    "type": "string",
                    "description": "The type of the notification."
                },
                "correlationId": {
                    "type": "string",
                    "description": "The correlation id for this event."
                },
                "domain": {
                    "type": "string",
                    "description": "The domain of the event."
                },
                "title": {
                    "type": "string",
                    "description": "The title of the event."
                },
                "description": {
                    "type": "string",
                    "description": "An explnatory of the event."
                },
                "priority": {
                    "type": "string",
                    "description": "A priority."
                },
                "timeOcurred": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time the event occured."
                }
            }
        },
        "WorkOrderDeleteEventPayload": {
            "type": "object",
            "description": "The event data structure",
            "properties": {
                "workOrder": {
                    "description": "The involved resource data for the event",
                    "$ref": "#/definitions/WorkOrder"
                }
            }
        },
        "WorkOrderStateChangeEvent": {
            "type": "object",
            "description": "The notification data structure",
            "properties": {
                "event": {
                    "description": "The event payload linked to the involved resource object",
                    "$ref": "#/definitions/WorkOrderStateChangeEventPayload"
                },
                "eventId": {
                    "type": "string",
                    "description": "The identifier of the notification."
                },
                "eventTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time of the event occurrence."
                },
                "eventType": {
                    "type": "string",
                    "description": "The type of the notification."
                },
                "correlationId": {
                    "type": "string",
                    "description": "The correlation id for this event."
                },
                "domain": {
                    "type": "string",
                    "description": "The domain of the event."
                },
                "title": {
                    "type": "string",
                    "description": "The title of the event."
                },
                "description": {
                    "type": "string",
                    "description": "An explnatory of the event."
                },
                "priority": {
                    "type": "string",
                    "description": "A priority."
                },
                "timeOcurred": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time the event occured."
                }
            }
        },
        "WorkOrderStateChangeEventPayload": {
            "type": "object",
            "description": "The event data structure",
            "properties": {
                "workOrder": {
                    "description": "The involved resource data for the event",
                    "$ref": "#/definitions/WorkOrder"
                }
            }
        },
        "WorkOrderInformationRequiredEvent": {
            "type": "object",
            "description": "The notification data structure",
            "properties": {
                "eventId": {
                    "type": "string",
                    "description": "The identifier of the notification."
                },
                "eventTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time of the event occurrence."
                },
                "eventType": {
                    "type": "string",
                    "description": "The type of the notification."
                },
                "correlationId": {
                    "type": "string",
                    "description": "The correlation id for this event."
                },
                "domain": {
                    "type": "string",
                    "description": "The domain of the event."
                },
                "title": {
                    "type": "string",
                    "description": "The title of the event."
                },
                "description": {
                    "type": "string",
                    "description": "An explnatory of the event."
                },
                "priority": {
                    "type": "string",
                    "description": "A priority."
                },
                "timeOcurred": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time the event occured."
                },
                "fieldPath": {
                    "type": "string",
                    "description": "The path identifying the object field concerned by this notification."
                },
                "event": {
                    "description": "The event payload linked to the involved resource object",
                    "$ref": "#/definitions/WorkOrderInformationRequiredEventPayload"
                }
            }
        },
        "WorkOrderInformationRequiredEventPayload": {
            "type": "object",
            "description": "The event data structure",
            "properties": {
                "workOrder": {
                    "description": "The involved resource data for the event",
                    "$ref": "#/definitions/WorkOrder"
                }
            }
        },
        "CancelWorkOrderCreateEvent": {
            "type": "object",
            "description": "The notification data structure",
            "properties": {
                "event": {
                    "description": "The event payload linked to the involved resource object",
                    "$ref": "#/definitions/CancelWorkOrderCreateEventPayload"
                },
                "eventId": {
                    "type": "string",
                    "description": "The identifier of the notification."
                },
                "eventTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time of the event occurrence."
                },
                "eventType": {
                    "type": "string",
                    "description": "The type of the notification."
                },
                "correlationId": {
                    "type": "string",
                    "description": "The correlation id for this event."
                },
                "domain": {
                    "type": "string",
                    "description": "The domain of the event."
                },
                "title": {
                    "type": "string",
                    "description": "The title of the event."
                },
                "description": {
                    "type": "string",
                    "description": "An explnatory of the event."
                },
                "priority": {
                    "type": "string",
                    "description": "A priority."
                },
                "timeOcurred": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time the event occured."
                }
            }
        },
        "CancelWorkOrderCreateEventPayload": {
            "type": "object",
            "description": "The event data structure",
            "properties": {
                "cancelWorkOrder": {
                    "description": "The involved resource data for the event",
                    "$ref": "#/definitions/CancelWorkOrder"
                }
            }
        },
        "CancelWorkOrderStateChangeEvent": {
            "type": "object",
            "description": "The notification data structure",
            "properties": {
                "event": {
                    "description": "The event payload linked to the involved resource object",
                    "$ref": "#/definitions/CancelWorkOrderStateChangeEventPayload"
                },
                "eventId": {
                    "type": "string",
                    "description": "The identifier of the notification."
                },
                "eventTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time of the event occurrence."
                },
                "eventType": {
                    "type": "string",
                    "description": "The type of the notification."
                },
                "correlationId": {
                    "type": "string",
                    "description": "The correlation id for this event."
                },
                "domain": {
                    "type": "string",
                    "description": "The domain of the event."
                },
                "title": {
                    "type": "string",
                    "description": "The title of the event."
                },
                "description": {
                    "type": "string",
                    "description": "An explnatory of the event."
                },
                "priority": {
                    "type": "string",
                    "description": "A priority."
                },
                "timeOcurred": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time the event occured."
                }
            }
        },
        "CancelWorkOrderStateChangeEventPayload": {
            "type": "object",
            "description": "The event data structure",
            "properties": {
                "cancelWorkOrder": {
                    "description": "The involved resource data for the event",
                    "$ref": "#/definitions/CancelWorkOrder"
                }
            }
        },
        "CancelWorkOrderInformationRequiredEvent": {
            "type": "object",
            "description": "The notification data structure",
            "properties": {
                "eventId": {
                    "type": "string",
                    "description": "The identifier of the notification."
                },
                "eventTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time of the event occurrence."
                },
                "eventType": {
                    "type": "string",
                    "description": "The type of the notification."
                },
                "correlationId": {
                    "type": "string",
                    "description": "The correlation id for this event."
                },
                "domain": {
                    "type": "string",
                    "description": "The domain of the event."
                },
                "title": {
                    "type": "string",
                    "description": "The title of the event."
                },
                "description": {
                    "type": "string",
                    "description": "An explnatory of the event."
                },
                "priority": {
                    "type": "string",
                    "description": "A priority."
                },
                "timeOcurred": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time the event occured."
                },
                "fieldPath": {
                    "type": "string",
                    "description": "The path identifying the object field concerned by this notification."
                },
                "event": {
                    "description": "The event payload linked to the involved resource object",
                    "$ref": "#/definitions/CancelWorkOrderInformationRequiredEventPayload"
                }
            }
        },
        "CancelWorkOrderInformationRequiredEventPayload": {
            "type": "object",
            "description": "The event data structure",
            "properties": {
                "cancelWorkOrder": {
                    "description": "The involved resource data for the event",
                    "$ref": "#/definitions/CancelWorkOrder"
                }
            }
        },
        "Error": {
            "description": "Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)",
            "type": "object",
            "required": [
                "code",
                "reason"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Application relevant detail, defined in the API or a common list."
                },
                "reason": {
                    "type": "string",
                    "description": "Explanation of the reason for the error which can be shown to a client user."
                },
                "message": {
                    "type": "string",
                    "description": "More details and corrective actions related to the error which can be shown to a client user."
                },
                "status": {
                    "type": "string",
                    "description": "HTTP Error code extension"
                },
                "referenceError": {
                    "type": "string",
                    "format": "uri",
                    "description": "URI of documentation describing the error."
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class."
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name."
                }
            }
        }
    }
}
